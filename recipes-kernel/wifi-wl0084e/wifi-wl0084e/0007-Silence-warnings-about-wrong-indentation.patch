From 63b90b6d4bc4ba9fe15eb2a4c2b9be91229f17ff Mon Sep 17 00:00:00 2001
From: Manuel Huber <Manuel.h87@gmail.com>
Date: Sat, 1 Apr 2017 13:28:10 +0200
Subject: [PATCH 07/10] Silence warnings about wrong indentation

---
 core/rtw_iol.c             |  6 +++++-
 core/rtw_security.c        | 35 ++++++++++++++++++-----------------
 os_dep/linux/ioctl_linux.c |  6 +++---
 3 files changed, 26 insertions(+), 21 deletions(-)

diff --git a/core/rtw_iol.c b/core/rtw_iol.c
index 45dc60d..65bab72 100644
--- a/core/rtw_iol.c
+++ b/core/rtw_iol.c
@@ -258,7 +258,11 @@ void rtw_IOL_cmd_buf_dump(ADAPTER *Adapter,int buf_len,u8 *pbuf)
 	for(i=0;i< buf_len;i++){
 		printk("%02x-",*(pbuf+i));
 			
-		if(j%32 ==0) printk("\n");j++;				
+		if(j%32 ==0) {
+			printk("\n");
+		}
+
+		j++;
 	}
 	printk("\n");
 	printk("============= ioreg_cmd len = %d =============== \n",buf_len);	
diff --git a/core/rtw_security.c b/core/rtw_security.c
index 9841568..94a8973 100644
--- a/core/rtw_security.c
+++ b/core/rtw_security.c
@@ -1580,27 +1580,26 @@ _func_enter_;
     }
 
     /* Add on the final payload block if it needs padding */
-    if (payload_remainder > 0)
-    {
-        for (j = 0; j < 16; j++) padded_buffer[j] = 0x00;
-        for (j = 0; j < payload_remainder; j++)
-        {
+    if (payload_remainder > 0) {
+        for (j = 0; j < 16; j++) { padded_buffer[j] = 0x00; }
+        for (j = 0; j < payload_remainder; j++) {
             padded_buffer[j] = pframe[payload_index++];//padded_buffer[j] = message[payload_index++];
         }
         bitwise_xor(aes_out, padded_buffer, chain_buffer);
         aes128k128d(key, chain_buffer, aes_out);
-
     }
 
-    for (j = 0 ; j < 8; j++) mic[j] = aes_out[j];
+    for (j = 0 ; j < 8; j++) {
+        mic[j] = aes_out[j];
+    }
 
     /* Insert MIC into payload */
-    for (j = 0; j < 8; j++)
+    for (j = 0; j < 8; j++) {
     	pframe[payload_index+j] = mic[j];	//message[payload_index+j] = mic[j];
+    }
 
-	payload_index = hdrlen + 8;
-	for (i=0; i< num_blocks; i++)
-    {
+    payload_index = hdrlen + 8;
+    for (i=0; i< num_blocks; i++) {
         construct_ctr_preload(
                                 ctr_preload,
                                 a4_exists,
@@ -1977,15 +1976,17 @@ _func_enter_;
 
     }
 
-    for (j = 0 ; j < 8; j++) mic[j] = aes_out[j];
+    for (j = 0 ; j < 8; j++) {
+        mic[j] = aes_out[j];
+    }
 
     /* Insert MIC into payload */
-    for (j = 0; j < 8; j++)
-    	message[payload_index+j] = mic[j];
+    for (j = 0; j < 8; j++) {
+        message[payload_index+j] = mic[j];
+    }
 
-	payload_index = hdrlen + 8;
-	for (i=0; i< num_blocks; i++)
-    {
+    payload_index = hdrlen + 8;
+    for (i=0; i< num_blocks; i++) {
         construct_ctr_preload(
                                 ctr_preload,
                                 a4_exists,
diff --git a/os_dep/linux/ioctl_linux.c b/os_dep/linux/ioctl_linux.c
index e1184f5..c4aca4a 100644
--- a/os_dep/linux/ioctl_linux.c
+++ b/os_dep/linux/ioctl_linux.c
@@ -10580,10 +10580,10 @@ static int rtw_mp_read_reg(struct net_device *dev,
 						   tmp[j]=' ';
 						   j++;
 					  }
-					  if ( data[i] != '\0' )
+					  if ( data[i] != '\0' ) {
 					 	 tmp[j] = data[i];
-					 	
-					  	 j++;
+					  }
+					j++;
 				}
 				pch = tmp;		
 				DBG_871X("pch=%s",pch);
-- 
1.9.1

